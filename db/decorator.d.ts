import { TokenKey, Type } from '@fm/di';
import { BelongsToManyOptions, BelongsToOptions, HasManyOptions, HasOneOptions, ModelAttributes, ModelOptions } from 'sequelize';
type EmptyClassDecorator = () => ClassDecorator;
type EmptyPropertyDecorator = () => PropertyDecorator;
export { forwardRef } from '@fm/di';
export declare const Entity: EmptyClassDecorator;
export declare const Sync: EmptyClassDecorator;
export declare const Table: (tableName: string, options?: ModelOptions) => ClassDecorator;
export declare const HasOne: (type: TokenKey | (() => TokenKey), options?: HasOneOptions) => ClassDecorator;
export declare const HasMany: (type: TokenKey | (() => TokenKey), options?: HasManyOptions) => ClassDecorator;
export declare const BelongsTo: (type: TokenKey | (() => TokenKey), options?: BelongsToOptions) => ClassDecorator;
export declare const BelongsToMany: (type: TokenKey | (() => TokenKey), options: BelongsToManyOptions) => ClassDecorator;
export declare const PrimaryKey: EmptyPropertyDecorator;
export declare const Column: (name: string, options: ModelAttributes) => PropertyDecorator;
export declare const InjectEntity: (entity: Type<any>) => (entity: Type<any>) => PropertyDecorator;
